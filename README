#=============================================================
#=== LICENSED UNDER AGPLv3
#=== (C) WebNuLL ( babciastefa [ at ] gmail [ dot ] com )
#=== http://github.com/webnull/OpenWikiBlog
#=============================================================

20.03.2011:
	tuxKernel:
	+ Integrated cache system

	MySQL Driver:
	+ Implemented Insert() function
	+ Implemented "LIKE" operator in tuxMyDB_WhereClause
	* Fixed Delete() function
	+ Added ConvertFields() function
	+ Multi-socket feature - possibility to create sockets that changes only some things like just PREFIX or database or whole server
	+ One Time Query prefix change

	tuxSQLite:
	+ One Time Query prefix change
	+ Multi-socket feature - possibility to create sockets that changes only some things like just PREFIX or database

	libarchive_rar:
	- Incomplete unpacking functions (working hard on it)

19.03.2011:
	rconf:
	+ Repository parser, editor
	+ Support for flags (eg. "trusted")

	libarchive_zip:
	+ Extracting whole archive, selected directories or files

11.03.2011:
	libarchive_rar:
	+ Implementation of Boxman universal interface to operate on RAR archives (read only due to patents restrictions)

10.03.2011:
	libarchive_zip:
	+ manipulateBackslash() allows removing or adding backslashes to string on demand
	+ readFile() return contents of compressed file or false

07.03.2011:
	tuxKernel:
	* Fixed possible DOS in modprobe()
	+ Custom modules naming by metadata
	* Module ready checking deleted, module is now checked if created object exists in memory

	libboxman:
	+ This new library will allow to modify, create or delete archives and files inside them

	libarchive_zip:
	+ ls() allows navigating throught archive, returns easy to use data
	+ createArchive() for creating new archives
	+ checkResource() allows checking if ZIP archive is valid
	+ addDirByRecursion() a private method creating new directories and adding files to archive
	+ addEmptyDirsByRecursion() creates directories from string eg. root-directory/subdirectory1/subdirectory2
	+ extract() - extracts all or selected files to specified directory
	+ mv() renames files inside archive
	+ rm() removes files from archive
	+ addObject() add multiple files or directories (recursively) to archive
	

27.02.2011:
	tuxSQLite:
	+ convertFields now accepts numeric values for example "1" (int in string)
	* Fixed INT handling in convertFields()
	+ Update() now supports PREFIX
	* Fixed convertWhere() error information
	+ Extra Debugging informations

	libmypage:
	+ Added support for SEO links (pages by name, not by id)

26.02.2011:
	tuxSQLite:
	* Fixed non-object call in tuxMyDB_Object::__get()
	* Fixed Delete() function
	+ Implemented "LIKE" operator in tuxMyDB_WhereClause

	libtranslator:
	* Optimized loadTranslation() function, now it checks if translation was already loaded

17.02.2011:
	subpage:
	* Fixed error handling

	libsmarty:
	+ fillFromArray() will allow to assign multiple variables from array automatically, example fillFromArray(array('first'=>'tux', 'second'=>'bsd', 'third'=>'apple', 'fourth'=>'window'))

	tuxSQLite:
	* Fixed bug when fetch_assoc not returning values (requests for single rows "LIKE MYSQL")
	+ Insert() function implemented

	tuxKernel:
	* Version variable is now public
	+ File overlays ( $Kernel->findDir() will search for file in LD_LIBRARY_PATH.$File and $File and return result ), so there is now possibility to place module files in application directory

16.02.2011:
	navigation:
	+ Its new module for use with subpages (libpage) because you need to be in class to use libhooks, this is a simple class where you can store variables for use with libhooks

	libmenu:
	+ Added hook to menu array for translated menus

	libhooks:
	+ Possible to define second argument when calling a hooked function, example thisFunctionWillModifyHookedVariable($OriginalVariable, $HereGoesSecondArgument)

	libmypage:
	+ Added Kernel bindings ($Kernel environment variable now points to Kernel)

30.01.2011:
	libmypage:
	* Removed callings to "SITE" variable

	libmenu:
	* Removed callings to "SITE" variable

	libhooks:
	* Removed callings to "SITE" variable

	tuxKernel:
	* Fixed abort action when module is already loaded

	tuxSQLite:
	+ First version based on tuxMyDB interface using SQLite class builtin PHP (for Gentoo Linux need to compile with +sqlite3, +sqlite flags)
	+ Multiple sockets (databases)

23.01.2011:
	Database support:
	+ Fully modular databases

	libsmarty:
	+ LD_LIBRARY_PATH support
	
	tuxKernel:
	+ Support for LD_LIBRARY_PATH, core classes and modules can be shared with other web applications - multi-website feature restored in better way
	* Fixed configuration variables, its not one big array

	configuration:
	* Fixed configuration variables, its not one big array

25.12.2010:
	tuxKernel:
	* Some language "bugfixes"

	All modules and Kernel:
	- Removed multi-website feature, its no longer supported
	
	Project file structure:
	* Moved files from /website/$SITE to /data
	
	libmypage:
	* Optimized code removing checkForPage() function 

01.09.2010 (third commit):
	tuxKernel:
	* Optimalization, removed clonned variable

	libmenu:
	- Removed "echo" debugging informations

	libhooks:
	* Optimalization, removed some clonned variables

01.09.2010 (second commit):
	tuxKernel:
	+ ReturnSelfDumped() is now erasing SQL and CFG private variables to avoid posting passwords in to logs

	libhooks:
	* Fixed incorrect function names

	libadmin:
	+ Added support for "banned administrators"
	+ IP adress restriction for admin account

	libexceptions:
	* Fixed MakeADump(), file is now locked when saving - thanks to Michał Środek for report

	tuxKernelHardenedPatch:
	* Fixed stristr_array function name to stristrArray

	Admin Panel:
	+ Logging in using form

	MySQL driver:
	+ Added compability for "setClause" in tuxMyDB_WhereClause

01.09.2010:
	MySQL driver:
	- Removed dquery() function
	* Enabled Delete() function

	tuxKernel:
	* Fixed access to CFG variables
	* Fixed ReturnSelfDumped() (thanks to Michał Środek)

30.08.2010:
	libmenu:
	+ Added support for hooking menu translations and menu list from array ( without translation )

	libmypage:
	+ Added support for "CallThroughtKernel", now displaying page is called from config.php ( $MODS variable ) at startup

	libsmarty:
	* Fixed FixParams() where was no argument's given

	tuxKernel:
	- Removed dependencies support for modules, there is another *FASTER* and *BETTER* way to resolve dependencies
	+ Module triggers, configurable in config.php as parametrs ( array index: k_TRIGGERS )
	* Optimalized modprobe() code removing some ifs
	* Optimalized __get() removing white spaces
	+ "CallThroughtKernel" added, now there is possibility to call module functions throught startup ( config.php )

	libhooks:
	+ Adding and executing hooks

25.08.2010:
	tuxKernel:
	+ Added ReturnSelfDumped() whih allows read-only access to private and protected variables for debugging purposes
	* Fixed privigles on $Mods variable in Kernel to prevent overwriting from external module

	libexceptions:
	* Fixed Kernel memory saving
	+ Added error string in HTML format to raport

	index:
	* Fixed calls to error handler

23.08.2010:
	libadmin:
	+ Admin module for authentication, and other tasks simple and advanced

22.08.2010:
	libmenu:
	+ Added support for only one language websites

	libmypage:
	+ Added support for only one language websites

	tuxKernel:
	+ "Module on Demand" function, allow to avoid critical errors when there is no library loaded yet
	+ Database error handler, stops the execution of web application when detect an connection error

	MySQL driver:
	+ Added support for mysqli->connection_error in DB->error()

21.08.2010:
	tuxKernelHardenedPatch:
	+ Added support for SCRIPT, SQL INJECTION, FILE INSERTING/INCLUDING

	libtranslator:
	+ Supports loading translations from files and storing it in memory

	libsmarty:
	* Fixed notification type from ERROR to INFO for display()

	tuxKernel:
	* Changed from isset to isLoaded to check if module is loaded in to kernel in modprobe()

20.08.2010:
	Project is starting
	+ There are many things undocummented, sorry
